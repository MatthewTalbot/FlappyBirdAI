  def genetic_ai_fitness(self, genomes, config):
    self.ai_reset()
    birds = []
    nets = []
    ge = []

    for _, g in genomes:
      net = neat.nn.FeedForwardNetwork.create(g, config)
      nets.append(net)
      birds.append(Bird(220, 350))
      g.fitness = 0
      ge.append(g)

    run = True
    while run and len(birds) > 0:
      self.clock.tick(30)
      pipe_ind = 0
      if len(birds) > 0:
        if len(self.pipes) > 1 and birds[0].x > self.pipes[0].x + self.pipes[0].PIPE_TOP.get_width():
          pipe_ind = 1

      for x, bird in enumerate(birds):
        bird.move()
        ge[x].fitness += 0.1
        output = nets[x].activate((bird.y, abs(bird.y - self.pipes[pipe_ind].height), abs(bird.y - self.pipes[pipe_ind].bottom)))

        if output[0] > 0.5:
          bird.jump()
      
      self.base.move()
      #self.generate_ai_pipes(birds, nets, ge)
      rem = []
      add_pipe = False
      for pipe in self.pipes:
        pipe.move()
        for x, bird in enumerate(birds):
          if pipe.collision(bird):
            ge[x].fitness -= 1
            nets.pop(x)
            ge.pop(x)
            birds.pop(x)

          if not pipe.passed and pipe.x < bird.x:
            pipe.passed = True
            add_pipe = True

        if pipe.x + pipe.PIPE_TOP.get_width() < 0:
          rem.append(pipe)
            
        
      
      if add_pipe:
        self.score += 1
        for g in ge:
          g.fitness += 5
        self.pipes.append(Pipe(600))

      for r in rem:
        self.pipes.remove(r)

      for x, bird in enumerate(birds):
        if bird.y + bird.img.get_height() >= 730 or bird.y < 0:
          nets.pop(x)
          ge.pop(x)
          birds.pop(x)

      self.draw_genetic_ai_game_window(birds)